{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"RegistrationInfo": {
				"properties": {
					"clientSequenceId": {
						"type": "number",
						"format": "double",
						"description": "Sequential registration number of the client"
					},
					"poolLabel": {
						"type": "string",
						"description": "Label of the pool which is used in DMCFE encryption"
					},
					"registrationExpiry": {
						"type": "string",
						"description": "UTC timestamp denoting user registration expiry time"
					},
					"status": {
						"type": "string",
						"enum": [
							"REGISTRATION",
							"PK_COLLECTION",
							"ENCRYPTION",
							"FINALIZED",
							"EXPIRED"
						],
						"description": "Registration status in regard to relevant pool status.\n- REGISTRATION - pool is accepting client registrations\n- PK_COLLECTION - all users are registred, public key shares are being collected\n- ENCRYPTION - public key is assembled, clients can send Cyphertexts and decryption key shares\n- FINALIZED - all cyphertexts and decryption keys are collected\n- EXPIRED - pool failed while PK_COLLECTION or ENCRYPTION phase before the the expiry time"
					}
				},
				"required": [
					"clientSequenceId",
					"poolLabel",
					"registrationExpiry",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiDefaultResponseStatusEnum": {
				"type": "string",
				"enum": [
					"OK",
					"ERROR",
					"REQUEST_BODY_ERROR",
					"VALIDATION_ERROR",
					"TOO_MANY_REQUESTS",
					"UNAUTHORIZED",
					"AUTH_ERROR",
					"UPSTREAM_HTTP_ERROR",
					"INVALID_REQUEST",
					"NOT_IMPLEMENTED"
				],
				"description": "All possible values of status."
			},
			"ApiValidationErrorDetails": {
				"properties": {
					"className": {
						"type": "string"
					},
					"fieldErrors": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_RegistrationInfo_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/RegistrationInfo"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PoolStatus": {
				"type": "string",
				"enum": [
					"REGISTRATION",
					"ENCRYPTION",
					"FINALIZED",
					"CALCULATED",
					"EXPIRED"
				],
				"description": "Registration status in regard to relevant pool status.\n- REGISTRATION - pool is accepting client registrations and after them uploads of public key shares\n- ENCRYPTION - public key is assembled, clients can send Cyphertexts and decryption key shares\n- FINALIZED - all cyphertexts and decryption keys are collected\n- CALCULATED - histograms are calculated\n- EXPIRED - pool failed while PK_COLLECTION or ENCRYPTION phase before the the expiry time"
			},
			"PoolDataPayload": {
				"properties": {
					"status": {
						"$ref": "#/components/schemas/PoolStatus",
						"description": "Status"
					},
					"creationTime": {
						"type": "string",
						"description": "Creation time"
					},
					"registrationTime": {
						"type": "string",
						"description": "End of registration time"
					},
					"finalizationTime": {
						"type": "string",
						"description": "End of finalization time"
					},
					"calculationTime": {
						"type": "string",
						"description": "Time of calculation of histograms"
					},
					"poolLabel": {
						"type": "string",
						"description": "Label of the pool which is used in DMCFE encryption"
					},
					"poolExpiry": {
						"type": "string",
						"description": "UTC timestamp denoting pool expiry time"
					},
					"publicKeys": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "In case of status 'ENCRYPTION' or 'FINALIZED' contains Base64 encoded list of public key shares of each client"
					},
					"cypherTexts": {
						"items": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"type": "array",
						"description": "In case of status 'FINALIZED' contains Base64 encoded list of user cyphertexts"
					},
					"decryptionKeys": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "In case of status 'FINALIZED' contains Base64 encoded list of user decryption key shares together forming the\ndecryption key."
					},
					"histogram": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "Calculated histogram, submitted by certified analytics server"
					}
				},
				"required": [
					"status",
					"poolLabel",
					"poolExpiry"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_PoolDataPayload_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/PoolDataPayload"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PublicKeyShareRequest": {
				"properties": {
					"clientSequenceId": {
						"type": "number",
						"format": "double",
						"description": "Sequential registration number of the client"
					},
					"poolLabel": {
						"type": "string",
						"description": "Label of the pool which is used in DMCFE encryption"
					},
					"registrationExpiry": {
						"type": "string",
						"description": "UTC timestamp denoting user registration expiry time. Should be provided exactly as obtained\nat registration! // TODO: currently it is abused as registration token"
					},
					"keyShare": {
						"type": "string",
						"description": "Base64 encoded key share provided by the client"
					}
				},
				"required": [
					"clientSequenceId",
					"poolLabel",
					"registrationExpiry",
					"keyShare"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CypherAndDKRequest": {
				"properties": {
					"clientSequenceId": {
						"type": "number",
						"format": "double",
						"description": "Sequential registration number of the client"
					},
					"poolLabel": {
						"type": "string",
						"description": "Label of the pool which is used in DMCFE encryption"
					},
					"cypherText": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Base64 encoded client's cyphertext"
					},
					"decryptionKeyShare": {
						"type": "string",
						"description": "Base64 encoded client's decryption key share"
					}
				},
				"required": [
					"clientSequenceId",
					"poolLabel",
					"cypherText",
					"decryptionKeyShare"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_PoolDataPayload-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PoolDataPayload"
						},
						"type": "array"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HistogramPayload": {
				"properties": {
					"secret": {
						"type": "string",
						"description": "Secret known only to analytics server"
					},
					"poolLabel": {
						"type": "string",
						"description": "Label of the pool which is used in DMCFE encryption"
					},
					"histogram": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "Calculated histogram, submitted by certified analytics server"
					}
				},
				"required": [
					"secret",
					"poolLabel"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_any_": {
				"properties": {
					"data": {},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "api-back",
		"version": "1.0.0",
		"description": "Api definition project",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Abelium"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/ace/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_RegistrationInfo_"
								}
							}
						}
					}
				},
				"description": "Registers a client to the pool",
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "label",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ace/status/{poolLabel}": {
			"get": {
				"operationId": "Status",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PoolDataPayload_"
								}
							}
						}
					}
				},
				"description": "Returns status info about the pool specific to the client",
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [
					{
						"description": "- pool",
						"in": "path",
						"name": "poolLabel",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ace/public-key-share": {
			"post": {
				"operationId": "PostPublicKeyShare",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PoolDataPayload_"
								}
							}
						}
					}
				},
				"description": "Posts specific user's public key share to form common master key",
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PublicKeyShareRequest"
							}
						}
					}
				}
			}
		},
		"/ace/cyphertext-and-dk": {
			"post": {
				"operationId": "PostCypherTextAndDecryptionKeysShares",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PoolDataPayload_"
								}
							}
						}
					}
				},
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CypherAndDKRequest"
							}
						}
					}
				}
			}
		},
		"/ace/pools": {
			"get": {
				"operationId": "GetPools",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PoolDataPayload-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/ace/histogram": {
			"post": {
				"operationId": "PostHistogram",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_PoolDataPayload_"
								}
							}
						}
					}
				},
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/HistogramPayload"
							}
						}
					}
				}
			}
		},
		"/ace/reset": {
			"post": {
				"operationId": "Reset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"ACE"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}